<?php

namespace app\controllers;

use Yii;
use app\models\Pasien;
use app\models\Dokter;
use app\models\RekamMedis;
use app\models\MobileRecord;
use app\models\Kunjungan;
use app\models\Klinik;
use app\models\PasienSearch;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\filters\VerbFilter;
use app\components\AccessRule;
use yii\filters\AccessControl;
use app\models\User;
use yii\web\UploadedFile;
use kartik\mpdf\Pdf;

/**
 * PasienController implements the CRUD actions for Pasien model.
 */
class PasienController extends Controller
{
    /**
     * @inheritdoc
     */
    // public function behaviors()
    // {
    //     return [
    //         'verbs' => [
    //             'class' => VerbFilter::className(),
    //             'actions' => [
    //                 'delete' => ['POST'],
    //             ],
    //         ],
    //         'access' => [
    //                'class' => AccessControl::className(),
    //                'ruleConfig' => [
    //                    'class' => AccessRule::className(),
    //                ],
    //                'only' => ['index','create', 'update', 'delete','cari','view'],
    //                'rules' => [
    //                    [
    //                        'actions' => ['index','create', 'update', 'delete','cari','view'],
    //                        'allow' => true,
    //                        'roles' => [
    //                            User::ROLE_ADMIN,User::ROLE_DOKTER_ADMIN,
    //                        ],
    //                    ]
    //                ],
    //         ],
    //     ];
    // }

    public function actionDiaryMobile($id){
        $m = Pasien::findOne($id);
        if ($m==null || Yii::$app->user->identity->klinik_id!=$m->klinik_id)
            return false;
        $model = MobileRecord::find()->where(['mr'=>$id])->orderBy(['created_at'=>SORT_DESC]);
        if($model->count()==0)
            return "Maaf, Pasien tidak terdaftar/ belum pernah menulis pada Diary Pasien...";
        else{
            $data = $model->all();
            return $this->renderAjax('listDiary', compact('data'));
        }

    }

    /**
     * Lists all Pasien models.
     * @return mixed
     */
    public function actionIndex()
    {
        $searchModel = new PasienSearch();
        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);

        return $this->render('index', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
        ]);
    }

    /**
     * Displays a single Pasien model.
     * @param string $id
     * @return mixed
     */
    public function actionView($id)
    {
        if(!$this->isUserAuthor()) 
            throw new NotFoundHttpException('The requested page does not exist.');

        return $this->renderAjax('view', [
            'model' => $this->findModel($id),
        ]);
    }

    public function actionKartu($id)
    {
        $this->layout = 'main_no_portlet';
        if(!$this->isUserAuthor()) 
            throw new NotFoundHttpException('The requested page does not exist.');

        return $this->render('kartu', [
            'pasien' => $this->findModel($id),
            'klinik' => Klinik::findOne(Yii::$app->user->identity->klinik_id)
        ]);
    }

    /**
     * Creates a new Pasien model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return mixed
     */
    public function actionCreate($asal=null)
    {

        $model = new Pasien();
        $model->mr = $model->createMr();
        $model->klinik_id = Yii::$app->user->identity->klinik_id;
        $model->created = date('Y-m-d H:i:s');
        $model->user_input = Yii::$app->user->identity->username;
        $model->user_modified = Yii::$app->user->identity->username;
        if ($model->load(Yii::$app->request->post())) {
            $model->imageFile = UploadedFile::getInstance($model, 'imageFile');
            
            if(isset($model->imageFile)){
                $model->upload();
                $src = 'img/pasien/' . $model->mr;
                $ext = $model->imageFile->extension;
                $model->foto = "$src.$ext";
            }

            $model->save();
            if(isset(Yii::$app->request->post()['Antrian'])){
                $kunjungan = new Kunjungan();
                $kunjungan->klinik_id = Yii::$app->user->identity->klinik_id;
                $kunjungan->mr = $model->mr;
                $kunjungan->tanggal_periksa = date('Y-m-d');
                $kunjungan->jam_masuk = date('Y-m-d H:i:s');
                $kunjungan->status = 'antri';
                $kunjungan->user_input = Yii::$app->user->identity->username;
                $kunjungan->user_id = Yii::$app->user->identity->id;
                $kunjungan->nomor_antrian = Kunjungan::hitAntrian(Yii::$app->user->identity->klinik_id,$model->tanggal_periksa);
                $kunjungan->save();
                if(!empty($asal)){
                    return $this->redirect([$asal]);
                }
                return $this->redirect(['kunjungan/index']);
            }

            return $this->redirect(['index']);

        } else {
            return $this->renderAjax('create', [
                    'model' => $model,
            ]);
        }
    }


    /**
     * Updates an existing Pasien model.
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param string $id
     * @return mixed
     */
    public function actionUpdate($id)
    {
        if(!$this->isUserAuthor()) 
            throw new NotFoundHttpException('The requested page does not exist.');

        $model = $this->findModel($id);

        if ($model->load(Yii::$app->request->post())) {
            $model->imageFile = UploadedFile::getInstance($model, 'imageFile');
            
            if(isset($model->imageFile)){
                $model->upload();
                $src = 'img/pasien/' . $model->mr;
                $ext = $model->imageFile->extension;
                $model->foto = "$src.$ext";
            }
            $model->save();
            return $this->redirect(['index']);
        } else {
            return $this->renderAJax('update', [
                'model' => $model,
            ]);
        }
    }

    /**
     * Deletes an existing Pasien model.
     * If deletion is successful, the browser will be redirected to the 'index' page.
     * @param string $id
     * @return mixed
     */
    public function actionDelete($id)
    {
        if(!$this->isUserAuthor()) 
            throw new NotFoundHttpException('The requested page does not exist.');
        try{
            $this->findModel($id)->delete();
            \Yii::$app->getSession()->setFlash('success', 'Berhasil Menghapus Pasien');
        } catch(\Exception $e) {
                \Yii::$app->getSession()->setFlash('error', 'Gagal Menghapus Pasien, Karena Sudah Memiliki Data Transaksi');
        }
        return $this->redirect(['index']);
    }

    public function actionCari()
    {
        $post_data = Yii::$app->request->post();
        $klinik_id = Yii::$app->user->identity->klinik_id;
        $query = Pasien::findBySql("
            SELECT * FROM pasien
            WHERE klinik_id = $klinik_id AND (
                mr LIKE '%".$post_data['keyword']."%' OR
                nama LIKE '%".$post_data['keyword']."%' OR
                alamat LIKE '%".$post_data['keyword']."%'
            )
        ");
        return json_encode($query->asArray()->all());
    }

    /**
     * Finds the Pasien model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param string $id
     * @return Pasien the loaded model
     * @throws NotFoundHttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        if (($model = Pasien::findOne($id)) !== null) {
            return $model;
        } else {
            throw new NotFoundHttpException('The requested page does not exist.');
        }
    }

    protected function isUserAuthor($id = null)
    {   
        if ($id == null) $id = Yii::$app->request->get('id');
        return $this->findModel($id)->klinik_id == Yii::$app->user->identity->klinik_id;
    }

    public function actionResumeMedis($id=null, $rmid = null){

        if($id!==null){
            $id = Yii::$app->security->decryptByKey( utf8_decode($id), Yii::$app->params['kunciInggris'] );

            if($this->isUserAuthor($id)){
                $pasien = $this->findModel($id);
                $dokter = Dokter::findOne(Yii::$app->user->identity->id);
                if($rmid!==null){
                    $rmid = Yii::$app->security->decryptByKey( utf8_decode($rmid), Yii::$app->params['kunciInggris'] );
                    $rm = RekamMedis::find()->where(['user_id'=>Yii::$app->user->identity->id,'mr'=>$id,'rm_id'=>$rmid])->orderBy(['created'=>SORT_ASC])->all();
                }
                else
                    $rm = RekamMedis::find()->where(['user_id'=>Yii::$app->user->identity->id,'mr'=>$id])->orderBy(['created'=>SORT_ASC])->all();

                $content = $this->renderPartial('resumePasien',compact('pasien','dokter','rm'));
        
                // setup kartik\mpdf\Pdf component
                $pdf = new Pdf([
                    // set to use core fonts only
                    'mode' => Pdf::MODE_CORE, 
                    // A4 paper format
                    'format' => Pdf::FORMAT_A4, 
                    // portrait orientation
                    'orientation' => Pdf::ORIENT_PORTRAIT, 
                    // stream to browser inline
                    'destination' => Pdf::DEST_DOWNLOAD, 
                    // your html content input
                    'content' => $content,  
                    // format content from your own css file if needed or use the
                    // enhanced bootstrap css built by Krajee for mPDF formatting 
                    'cssFile' => '@vendor/kartik-v/yii2-mpdf/assets/kv-mpdf-bootstrap.min.css',
                    'filename' => "Resume Medis ".$pasien->mr." ".date("dmY_His").".pdf",
                    // any css to be embedded if required
                    'cssInline' => '.kv-heading-1{font-size:18px}', 
                     // set mPDF properties on the fly
                    'options' => ['title' => "Resume Medis ".$pasien->mr." ".date("d-m-Y H:i:s")],
                     // call mPDF methods on the fly
                    'methods' => [ 
                        'SetHeader'=>["Resume Medis ".$pasien->mr." ".date("d-m-Y H:i:s")], 
                        'SetFooter'=>['{PAGENO}'],
                    ]
                ]);
                
                ob_end_clean();
                return $pdf->render(); 
                // return the pdf output as per the 
            }
            

        }
        

        throw new NotFoundHttpException('The requested page does not exist.');
    }
}
